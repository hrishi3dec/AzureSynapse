{
	"name": "Item_DataFlow1",
	"properties": {
		"folder": {
			"name": "AdventureWorksDataFlows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "ProductDataDeltaSource"
				}
			],
			"sinks": [
				{
					"name": "ItemSink"
				}
			],
			"transformations": [
				{
					"name": "Deduplicated1ProductDataDeltaSource"
				},
				{
					"name": "ProductData"
				},
				{
					"name": "SelectProductData"
				},
				{
					"name": "Item"
				}
			],
			"script": "parameters{\n\tmodifiedAfter as timestamp,\n\tmodifiedBefore as timestamp\n}\nsource(output(\n\t\tCategory as string,\n\t\tSubcategory as string,\n\t\tModel as string,\n\t\tListPrice as decimal(18,2),\n\t\tColor as string,\n\t\tStandardCost as decimal(18,2),\n\t\tProduct as string,\n\t\tSKU as string,\n\t\tProductKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'ProductData',\n\tmanifestType: 'manifest') ~> ProductDataDeltaSource\nProductDataDeltaSource aggregate(groupBy(ProductKey),\n\tCategory = last(Category),\n\t\tSubcategory = last(Subcategory),\n\t\tModel = last(Model),\n\t\tListPrice = last(ListPrice),\n\t\tColor = last(Color),\n\t\tStandardCost = last(StandardCost),\n\t\tProduct = last(Product),\n\t\tSKU = last(SKU)) ~> Deduplicated1ProductDataDeltaSource\nDeduplicated1ProductDataDeltaSource select(mapColumn(\n\t\tCategory,\n\t\tSubcategory,\n\t\tModel,\n\t\tListPrice,\n\t\tColor,\n\t\tStandardCost,\n\t\tProduct,\n\t\tSKU,\n\t\tProductKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ProductData\nProductData select(mapColumn(\n\t\tSKU,\n\t\tStandardCost,\n\t\tListPrice\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectProductData\nSelectProductData select(mapColumn(\n\t\tItemSku = SKU,\n\t\tStandardCost,\n\t\tListPrice\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Item\nItem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Item',\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> ItemSink"
		}
	}
}